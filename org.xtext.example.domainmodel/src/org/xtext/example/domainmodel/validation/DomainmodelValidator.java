/*
 * generated by Xtext 2.21.0
 */
package org.xtext.example.domainmodel.validation;
import java.util.Set;
import java.util.HashSet;
import org.eclipse.xtext.validation.Check;
import org.xtext.example.domainmodel.domainmodel.Model;
import org.xtext.example.domainmodel.domainmodel.Intent;
import org.xtext.example.domainmodel.domainmodel.Agent;
import org.xtext.example.domainmodel.domainmodel.DomainmodelPackage;

/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
public class DomainmodelValidator extends AbstractDomainmodelValidator {
	
	@Check
	public void checkIntentNoCycleInHierachy(Model model) {
		Set<Intent> viewedIntents = new HashSet<Intent>();
		for(Agent agent : model.getAgent()) {
			if(agent instanceof Intent) {
				Intent intent = (Intent) agent;
				if (intent.getSuperType()== null) {
					return ; // nothing to check
				}
				viewedIntents.add(intent);
				Intent currentIntent = intent.getSuperType();
				while (currentIntent != null) {
				if (viewedIntents.contains(currentIntent)) {
					error("Hierarchy cycle of intents detected! '"+currentIntent.getName()+"'", DomainmodelPackage.Literals.MODEL__AGENT, currentIntent.getSuperType().getName());
				return ;
				}
				viewedIntents.add(currentIntent);
				currentIntent = currentIntent.getSuperType();
				}
			}
		}
	}
}
