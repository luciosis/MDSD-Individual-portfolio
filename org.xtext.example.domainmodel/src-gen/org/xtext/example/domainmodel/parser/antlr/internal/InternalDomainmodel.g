/*
 * generated by Xtext 2.21.0
 */
grammar InternalDomainmodel;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.example.domainmodel.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.domainmodel.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.domainmodel.services.DomainmodelGrammarAccess;

}

@parser::members {

 	private DomainmodelGrammarAccess grammarAccess;

    public InternalDomainmodelParser(TokenStream input, DomainmodelGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Model";
   	}

   	@Override
   	protected DomainmodelGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	iv_ruleModel=ruleModel
	{ $current=$iv_ruleModel.current; }
	EOF;

// Rule Model
ruleModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getModelAccess().getAgentAgentParserRuleCall_0());
			}
			lv_agent_0_0=ruleAgent
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getModelRule());
				}
				add(
					$current,
					"agent",
					lv_agent_0_0,
					"org.xtext.example.domainmodel.Domainmodel.Agent");
				afterParserOrEnumRuleCall();
			}
		)
	)*
;

// Entry rule entryRuleAgent
entryRuleAgent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAgentRule()); }
	iv_ruleAgent=ruleAgent
	{ $current=$iv_ruleAgent.current; }
	EOF;

// Rule Agent
ruleAgent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getAgentAccess().getEntityParserRuleCall_0());
		}
		this_Entity_0=ruleEntity
		{
			$current = $this_Entity_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getAgentAccess().getIntentParserRuleCall_1());
		}
		this_Intent_1=ruleIntent
		{
			$current = $this_Intent_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIntent
entryRuleIntent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntentRule()); }
	iv_ruleIntent=ruleIntent
	{ $current=$iv_ruleIntent.current; }
	EOF;

// Rule Intent
ruleIntent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Intent'
		{
			newLeafNode(otherlv_0, grammarAccess.getIntentAccess().getIntentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getIntentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIntentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_2='extends'
			{
				newLeafNode(otherlv_2, grammarAccess.getIntentAccess().getExtendsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getIntentRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getIntentAccess().getSuperTypeIntentCrossReference_2_1_0());
					}
				)
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getIntentAccess().getIsFollowUpIsFollowUpParserRuleCall_3_0());
				}
				lv_isFollowUp_4_0=ruleIsFollowUp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntentRule());
					}
					set(
						$current,
						"isFollowUp",
						lv_isFollowUp_4_0,
						"org.xtext.example.domainmodel.Domainmodel.IsFollowUp");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getIntentAccess().getQuestionQuestionParserRuleCall_4_0());
				}
				lv_question_5_0=ruleQuestion
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntentRule());
					}
					add(
						$current,
						"question",
						lv_question_5_0,
						"org.xtext.example.domainmodel.Domainmodel.Question");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getIntentAccess().getTrainingTrainingParserRuleCall_5_0());
				}
				lv_training_6_0=ruleTraining
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIntentRule());
					}
					set(
						$current,
						"training",
						lv_training_6_0,
						"org.xtext.example.domainmodel.Domainmodel.Training");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIsFollowUp
entryRuleIsFollowUp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsFollowUpRule()); }
	iv_ruleIsFollowUp=ruleIsFollowUp
	{ $current=$iv_ruleIsFollowUp.current; }
	EOF;

// Rule IsFollowUp
ruleIsFollowUp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='isFollowUp'
		{
			newLeafNode(otherlv_0, grammarAccess.getIsFollowUpAccess().getIsFollowUpKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsFollowUpRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getIsFollowUpAccess().getIntentIntentCrossReference_1_0());
				}
			)
		)
	)
;

// Entry rule entryRuleEntity
entryRuleEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityRule()); }
	iv_ruleEntity=ruleEntity
	{ $current=$iv_ruleEntity.current; }
	EOF;

// Rule Entity
ruleEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getEntityAccess().getEntityKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='['
		{
			newLeafNode(otherlv_2, grammarAccess.getEntityAccess().getLeftSquareBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEntityAccess().getExampleEntityExampleParserRuleCall_3_0());
				}
				lv_example_3_0=ruleEntityExample
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEntityRule());
					}
					add(
						$current,
						"example",
						lv_example_3_0,
						"org.xtext.example.domainmodel.Domainmodel.EntityExample");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4=']'
		{
			newLeafNode(otherlv_4, grammarAccess.getEntityAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleQuestion
entryRuleQuestion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuestionRule()); }
	iv_ruleQuestion=ruleQuestion
	{ $current=$iv_ruleQuestion.current; }
	EOF;

// Rule Question
ruleQuestion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getQuestionAccess().getQuestionEntityQuestionEntityParserRuleCall_0_0());
				}
				lv_questionEntity_0_0=ruleQuestionEntity
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getQuestionRule());
					}
					set(
						$current,
						"questionEntity",
						lv_questionEntity_0_0,
						"org.xtext.example.domainmodel.Domainmodel.QuestionEntity");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='with'
		{
			newLeafNode(otherlv_1, grammarAccess.getQuestionAccess().getWithKeyword_1());
		}
		(
			(
				lv_prompt_2_0=RULE_STRING
				{
					newLeafNode(lv_prompt_2_0, grammarAccess.getQuestionAccess().getPromptSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getQuestionRule());
					}
					setWithLastConsumed(
						$current,
						"prompt",
						lv_prompt_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleQuestionEntity
entryRuleQuestionEntity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQuestionEntityRule()); }
	iv_ruleQuestionEntity=ruleQuestionEntity
	{ $current=$iv_ruleQuestionEntity.current; }
	EOF;

// Rule QuestionEntity
ruleQuestionEntity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getQuestionEntityAccess().getWithEntityReferenceParserRuleCall_0());
			}
			lv_withEntity_0_0=ruleReference
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getQuestionEntityRule());
				}
				set(
					$current,
					"withEntity",
					lv_withEntity_0_0,
					"org.xtext.example.domainmodel.Domainmodel.Reference");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleTraining
entryRuleTraining returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrainingRule()); }
	iv_ruleTraining=ruleTraining
	{ $current=$iv_ruleTraining.current; }
	EOF;

// Rule Training
ruleTraining returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTrainingAccess().getTrainingAction_0(),
					$current);
			}
		)
		otherlv_1='Training:'
		{
			newLeafNode(otherlv_1, grammarAccess.getTrainingAccess().getTrainingKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTrainingAccess().getTrainingrefTrainingRefParserRuleCall_2_0());
				}
				lv_trainingref_2_0=ruleTrainingRef
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTrainingRule());
					}
					add(
						$current,
						"trainingref",
						lv_trainingref_2_0,
						"org.xtext.example.domainmodel.Domainmodel.TrainingRef");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleTrainingRef
entryRuleTrainingRef returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTrainingRefRule()); }
	iv_ruleTrainingRef=ruleTrainingRef
	{ $current=$iv_ruleTrainingRef.current; }
	EOF;

// Rule TrainingRef
ruleTrainingRef returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_phrase_0_0=RULE_STRING
				{
					newLeafNode(lv_phrase_0_0, grammarAccess.getTrainingRefAccess().getPhraseSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTrainingRefRule());
					}
					setWithLastConsumed(
						$current,
						"phrase",
						lv_phrase_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getTrainingRefAccess().getDeclarationDeclarationParserRuleCall_1_0());
				}
				lv_declaration_1_0=ruleDeclaration
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTrainingRefRule());
					}
					set(
						$current,
						"declaration",
						lv_declaration_1_0,
						"org.xtext.example.domainmodel.Domainmodel.Declaration");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='.'
		{
			newLeafNode(otherlv_2, grammarAccess.getTrainingRefAccess().getFullStopKeyword_2());
		}
	)
;

// Entry rule entryRuleDeclaration
entryRuleDeclaration returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationRule()); }
	iv_ruleDeclaration=ruleDeclaration
	{ $current=$iv_ruleDeclaration.current; }
	EOF;

// Rule Declaration
ruleDeclaration returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getDeclarationAccess().getLeftParenthesisKeyword_0());
		}
		(
			(
				lv_trainingstring_1_0=RULE_STRING
				{
					newLeafNode(lv_trainingstring_1_0, grammarAccess.getDeclarationAccess().getTrainingstringSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDeclarationRule());
					}
					setWithLastConsumed(
						$current,
						"trainingstring",
						lv_trainingstring_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='is'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeclarationAccess().getIsKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationAccess().getReferenceReferenceParserRuleCall_3_0());
				}
				lv_reference_3_0=ruleReference
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationRule());
					}
					set(
						$current,
						"reference",
						lv_reference_3_0,
						"org.xtext.example.domainmodel.Domainmodel.Reference");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=')'
		{
			newLeafNode(otherlv_4, grammarAccess.getDeclarationAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleEntityExample
entryRuleEntityExample returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEntityExampleRule()); }
	iv_ruleEntityExample=ruleEntityExample
	{ $current=$iv_ruleEntityExample.current; }
	EOF;

// Rule EntityExample
ruleEntityExample returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getEntityExampleAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEntityExampleRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			otherlv_1=','
			{
				newLeafNode(otherlv_1, grammarAccess.getEntityExampleAccess().getCommaKeyword_1());
			}
		)?
	)
;

// Entry rule entryRuleSysvariable
entryRuleSysvariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSysvariableRule()); }
	iv_ruleSysvariable=ruleSysvariable
	{ $current=$iv_ruleSysvariable.current; }
	EOF;

// Rule Sysvariable
ruleSysvariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='number'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getSysvariableAccess().getValueNumberKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='date-time'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getSysvariableAccess().getValueDateTimeKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
				    |
				lv_value_0_3='date'
				{
					newLeafNode(lv_value_0_3, grammarAccess.getSysvariableAccess().getValueDateKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_3, null);
				}
				    |
				lv_value_0_4='duration'
				{
					newLeafNode(lv_value_0_4, grammarAccess.getSysvariableAccess().getValueDurationKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_4, null);
				}
				    |
				lv_value_0_5='address'
				{
					newLeafNode(lv_value_0_5, grammarAccess.getSysvariableAccess().getValueAddressKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_5, null);
				}
				    |
				lv_value_0_6='email'
				{
					newLeafNode(lv_value_0_6, grammarAccess.getSysvariableAccess().getValueEmailKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_6, null);
				}
				    |
				lv_value_0_7='phone-number'
				{
					newLeafNode(lv_value_0_7, grammarAccess.getSysvariableAccess().getValuePhoneNumberKeyword_0_6());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_7, null);
				}
				    |
				lv_value_0_8='date-period'
				{
					newLeafNode(lv_value_0_8, grammarAccess.getSysvariableAccess().getValueDatePeriodKeyword_0_7());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_8, null);
				}
				    |
				lv_value_0_9='time-period'
				{
					newLeafNode(lv_value_0_9, grammarAccess.getSysvariableAccess().getValueTimePeriodKeyword_0_8());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_9, null);
				}
				    |
				lv_value_0_10='url'
				{
					newLeafNode(lv_value_0_10, grammarAccess.getSysvariableAccess().getValueUrlKeyword_0_9());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_10, null);
				}
				    |
				lv_value_0_11='any'
				{
					newLeafNode(lv_value_0_11, grammarAccess.getSysvariableAccess().getValueAnyKeyword_0_10());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_11, null);
				}
				    |
				lv_value_0_12='color'
				{
					newLeafNode(lv_value_0_12, grammarAccess.getSysvariableAccess().getValueColorKeyword_0_11());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_12, null);
				}
				    |
				lv_value_0_13='language'
				{
					newLeafNode(lv_value_0_13, grammarAccess.getSysvariableAccess().getValueLanguageKeyword_0_12());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSysvariableRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_13, null);
				}
			)
		)
	)
;

// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	iv_ruleReference=ruleReference
	{ $current=$iv_ruleReference.current; }
	EOF;

// Rule Reference
ruleReference returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReferenceRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getEntityEntityCrossReference_0_0());
				}
			)
		)
		    |
		(
			(
				{
					newCompositeNode(grammarAccess.getReferenceAccess().getSysvarSysvariableParserRuleCall_1_0());
				}
				lv_sysvar_1_0=ruleSysvariable
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReferenceRule());
					}
					set(
						$current,
						"sysvar",
						lv_sysvar_1_0,
						"org.xtext.example.domainmodel.Domainmodel.Sysvariable");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
